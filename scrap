# case mSIAction
#     when ":move" then enter(room)
#     when ":shoot"
# end 
#Get the collection of all room sets
    def allRoomSet
        puts @@adjToRoom[self.number]
        puts @@adjToRoom[11]
        puts @@adjToRoom[3]
        puts @@adjToRoom[7]
    end


    #Check whether haze exist
            # i=0 
            # while (i < @@hazardRoom[self.number].length)
            #     if( @@hazardRoom[self.number].to_a[i]==haze)
            #         return 
            #     end
            #     i+=1
            # end


            # #check for positive out of bounds
                # if (pos.at(0) > arrLen)
                #     return '\0'
                # #Check for negative out of bounds
                # elsif ( pos.at(0) < (arrLen)*-1)
                #     return '\0'
                # else
                #     for i in seq
                #         #Check to see if not out of bounds
                #         if self[i]=='\0'
                #             return temp
                #         end
                #         temp.append(yield(self[i]))
                #     end
                #     return temp  
                # end